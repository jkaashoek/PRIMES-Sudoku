#from Model import *
#from Generator import *
#from Puzzle import *
#from Model16 import *
#from Generator16 import *
#from Puzzle16 import *
#from Model25 import *
#from Generator25 import *
#from Puzzle25 import *
import pylab
import numpy
from scipy import *

gentime9 = 25.2386682034
gentime16 = 30.310833931
gentime25 = 179.277740002

xvals = []
yvals9 = []
yvals16 = []
yvals25 = []

# xvals.append(0)
#yvals9.append(gentime9)
#yvals16.append(gentime16)
# yvals25.append(gentime25)

## for i in range(1,81):
##     start9 = time.time()
##     p9 = Puzzle9(1,i)
##     p9.empty()
##     end9 = time.time()
    ## start16 = time.time()
    ## p16 = Puzzle16(1,i)
    ## p16.empty()
    ## end16 = time.time()
    ## start25 = time.time()
    ## p25 = Puzzle25(1,i)
    ## p25.empty()
    ## end25 = time.time()
 ##   p9time = end9-start9
    ## p16time = end16-start16
    ## p25time = end25-start25
  ##  xvals.append(i)
    #print p9
    #print p9._Puzzle9__nEmpty
    ## if p9._Puzzle9__nEmpty < i:
    ##     yvals9.append(0)
    ## else:
    ##     yvals9.append(p9time)
    ## print yvals9
    ## if p16._Puzzle16__nEmpty < i:
    ##     yvals16.append(0)
    ## else:
    ##     yvals16.append(p16time)
    ## print yvals16
    ## if p25._Puzzle25__nEmpty < i:
    ##     yvals25.append(0)
    ## else:
    ##     yvals25.append(p25time)
    ## print yvals25
## print xvals
## print yvals9
## print yvals16
## print yvals25

nogenout9 = [0.22290420532226562, 0.31777501106262207, 0.4226868152618408, 0.5238738059997559, 0.6152629852294922, 0.7377870082855225, 0.8217499256134033, 0.9378759860992432, 1.0397300720214844, 1.2084500789642334, 1.290330171585083, 1.380514144897461, 1.4752061367034912, 1.6046350002288818, 1.7192659378051758, 1.872420072555542, 1.9545669555664062, 2.0717971324920654, 2.2484498023986816, 2.34468412399292, 2.4300589561462402, 2.529172897338867, 2.6985340118408203, 3.002120018005371]

nogenout16 = [0.584697961807251, 0.8925588130950928, 1.177973985671997, 1.521615982055664, 1.8085570335388184, 2.2117769718170166, 2.549055814743042, 2.754789113998413, 3.196722984313965, 3.527230978012085, 3.8260111808776855, 4.241541147232056, 4.49344801902771, 4.676069021224976, 5.040834903717041, 5.336648941040039, 5.692467212677002, 6.144430875778198, 6.765965938568115, 6.811436176300049, 7.108534812927246, 7.438079118728638, 8.285972833633423, 8.196988105773926, 8.536185026168823, 9.000421047210693, 9.291246175765991, 9.7013521194458, 10.106898069381714, 10.53796100616455, 11.004013061523438, 11.388873100280762]

nogenout25 = [1.3004889488220215, 2.045163154602051, 3.0783798694610596, 4.477284908294678, 5.083313941955566, 5.370381832122803, 6.643247127532959, 7.522037982940674, 8.0819411277771, 8.351011037826538, 9.941520929336548, 10.071057796478271, 11.211268186569214, 11.77899694442749, 13.882717847824097, 13.46838903427124, 14.345823049545288, 15.513200998306274, 16.500866889953613, 16.30467414855957, 20.498451948165894, 22.60173487663269, 21.348217964172363, 22.648709058761597, 23.512426137924194, 25.21536684036255, 25.087231874465942, 27.82570505142212, 27.981447219848633, 28.44846487045288, 29.088491201400757, 31.148373126983643, 32.741201877593994, 33.693727016448975, 36.22789716720581, 38.45832419395447, 42.07533097267151, 43.63374185562134, 45.682666063308716, 40.76242399215698, 40.577476978302, 42.55994892120361, 46.317755937576294, 45.50415301322937, 46.696444034576416]


out9 = [25.2386682034, 25.46137714390598, 25.557520151184423, 25.665016412781103, 25.761440277145727, 25.86770725254856, 25.973018169449194, 26.065578222320898, 26.207162141846045, 26.322648048446997, 26.428852319763525, 26.521759033249243, 26.61757135395847, 26.739648103760107, 26.84238028530918, 26.968945026443823, 27.099899053619726, 27.207892179535254, 27.349464178131445, 27.4398822784885, 27.56567811970554, 27.69716405873142, 27.792332410858496, 27.90377330784641, 28.068252086685522, 28.396901130722387, 28.274475336120947, 28.47583436970554, 28.651225090072973, 28.77352428440891, 28.923207283066137, 29.012529134796484, 29.22748017315708, 29.590824365661963, 29.86395740513645, 29.82114815716587, 30.038586378143652, 30.159376144455297, 30.68498325352512, 30.415346145676, 31.024603128479345, 30.75756239895664, 30.88339805607639, 31.287243127868994, 31.4709463119968, 31.518940210388525, 32.33500003819309, 32.01406931881748, 34.802333116577486]

out16 = [30.310833931, 30.897815704376466, 31.199430942566163, 31.495086908371217, 31.817634820968873, 32.18956184390284, 32.47897982600428, 32.82474684718348, 33.12699699404932, 33.35220980647303, 33.740473747284184, 34.22882485392786, 34.537715911896, 34.76359987261988, 34.959511041672, 35.31365680697657, 35.659845829040776, 35.958721876175176, 36.382982969314824, 37.63465285304285, 38.71604204180933, 39.442476034195195, 38.49018287661768, 38.36567306521631, 38.73586893084742, 39.27831482890345, 39.63981413844324, 39.90346193316675, 40.43557810786463, 40.79000592234827, 41.18717002871729, 41.66127514842249, 42.1279258728335, 42.616237878830205, 42.91894888880945, 43.511260032684575]

out25 = [179.277740002, 180.63825988801685, 181.42021799119678, 182.25051689180103, 183.11918401750293, 183.91552019151416, 184.565088987672, 185.29308915170398, 186.04194092782703, 187.1739220622417, 187.9371991160747, 188.88152003320423, 189.65283107789722, 190.12094187768665, 190.91341900857654, 191.69760394128528, 192.59694099458423, 193.39123892816272, 194.13723397287097, 196.4691348079082, 195.935796976411, 197.1004779342052, 199.42164683374133, 200.07252097161975, 201.04841589959827, 203.14289999040332, 203.81298613580432, 204.67184495958057, 204.91270685228076, 203.99997496637073, 204.93432402642932, 205.92220091851917, 206.7215180400249, 208.01647400888172, 208.83783602746692, 209.82363414796558, 211.5356049540874, 212.32744383844104, 213.1190588477489, 214.1534268859264, 215.26502585443225, 216.55551290544238, 218.64883899720874, 218.8352420333263, 219.87717103990283, 221.68892002137866, 222.75656008752551, 224.1816101077434, 226.7860329154369, 226.72175502809253, 227.59487891229358, 230.07976198228565, 231.7779910567638, 232.9665999415752, 233.98009705575672, 236.13157296212879, 238.30029201539722, 238.51153183015552, 241.66948390039173, 242.4344179633495, 244.1006729606029, 246.7084999087688, 247.22072792085376, 250.67448020013538, 252.88328313859668, 253.5286300185558, 257.28155088456833, 258.1512658599254, 259.867179870927, 263.8000400069591, 264.84104800256455, 268.21821999582016, 268.3189790252086, 272.38977098497116, 278.2830009463664, 279.97212314637864, 278.49146699937546, 282.07621121438706, 286.7054510119792, 287.6431169513103, 291.2082190516826, 294.42255306276047, 299.79249715837204, 305.7667839530345, 315.68452405961716, 307.75404381784165, 312.4113531115886, 314.2097189429637, 315.6781990531322, 324.8434121611949, 332.1104819777843, 327.97111320527756, 335.3280920985576, 340.09604597123825, 342.14219307931626, 346.3394789698955, 346.4835112098094, 356.12083292039597, 360.38549089463913, 363.2008318904277, 372.16282987626755, 374.00046396287644, 382.6169180873271, 383.8515851500865, 392.31878900560105, 414.1697211268779, 397.23894810708725, 399.7057070735332, 413.0771999362346, 422.1048948768016, 421.13132095369065, 428.62645292314255, 433.1510751250621, 443.9817340377208, 451.4541139605876]

print len(out9)
print len(out16)
print len(out25)
print len(nogenout9)
print len(nogenout16)
print len(nogenout25)

pylab.figure("Run Times Including Generation")
p1 = pylab.plot(range(49), out9, label = "9x9")
p2 = pylab.plot(range(36), out16, label = "26x26")
p3 = pylab.plot(range(115), out25, label = "25x25")
pylab.legend([p1,p2,p3], ["9x9 Puzzles", "16x16 Puzzles", "25x25 Puzzles"])
pylab.xlabel("Number of empty squares")
pylab.ylabel("Time")
pylab.title("Run times for emptying 9x9, 16x16, and 25x25 Sudoku Puzzles Including Generation")

pylab.figure("Run Times Excluding Generation")
p1 = pylab.plot(range(24), nogenout9, label = "9x9")
p2 = pylab.plot(range(32), nogenout16, label = "26x26")
p3 = pylab.plot(range(45), nogenout25, label = "25x25")
pylab.legend([p1,p2,p3], ["9x9 Puzzles", "16x16 Puzzles", "25x25 Puzzles"])
pylab.xlabel("Number of empty squares")
pylab.ylabel("Time")
pylab.title("Run times for emptying 9x9, 16x16, and 25x25 Sudoku Puzzles Excluding Generation")
pylab.show()
